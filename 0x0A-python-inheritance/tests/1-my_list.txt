The my_list module
==================

This module contain a class ``MyList``

::

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

::

  >>> my_list = MyList(1, 2)
  Traceback (most recent call last):
  TypeError: list expected at most 1 argument, got 2

::

  >>> my_list = MyList(None)
  Traceback (most recent call last):
  TypeError: 'NoneType' object is not iterable
  
::

  >>> print(my_list)
  []
 
::

  >>> my_list = MyList()
  >>> my_list.print_sorted()
  []

::
	>>> my_list = MyList([1, 4, 2])
	>>> print(my_list)
	[1, 4, 2]

::

  >>> my_list = MyList()
  >>> my_list.append(1)
  >>> my_list.append(4)
  >>> my_list.append(2)
  >>> my_list.append(3)
  >>> my_list.append(5)
  >>> print(my_list)
  [1, 4, 2, 3, 5]

::

  >>> my_list.print_sorted()
  [1, 2, 3, 4, 5]

::

  >>> print(my_list)
  [1, 4, 2, 3, 5]

::

  >>> my_list[0] = 8
  >>> print(my_list)
  [8, 4, 2, 3, 5]

::

  >>> my_list.remove(2)
  >>> print(my_list)
  [8, 4, 3, 5]

::

  >>> my_list = MyList()
  >>> print(my_list.print_sorted)
  <bound method MyList.print_sorted of []>

::

  >>> my_list.print_sorted(0)
  Traceback (most recent call last):
  TypeError: print_sorted() takes 1 positional argument but 2 were given

::

  >>> my_list = MyList()
  >>> my_list.append("D")
  >>> my_list.append("C")
  >>> my_list.append("B")
  >>> my_list.append("A")
  >>> print(my_list)
  ['D', 'C', 'B', 'A']

::

  >>> my_list.print_sorted()
  ['A', 'B', 'C', 'D']

::

  >>> my_list = MyList([1, "B", 3, "D"])
  >>> my_list.print_sorted()
  Traceback (most recent call last):
  TypeError: '<' not supported between instances of 'str' and 'int'
