The add_integer module
======================

This module contain an addition function ``add_integer(a, b=98)``:

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(5, 10)
	15

::
	>>> add_integer(1)
	99

::

	>>> add_integer(5, -8)
	-3

::

	>>> add_integer(5.0, 10.0)
	15

::

	>>> add_integer(3.7, 0.4)
	3

::

	>>> add_integer(-3.7, -0.4)
	-3

::

	>>> add_integer(-0.4, 3)
	3

::

  >>> add_integer(float('inf'))
  Traceback (most recent call last):
  OverflowError: cannot convert float infinity to integer
     

::

  >>> add_integer(7, float('inf'))
  Traceback (most recent call last):
  OverflowError: cannot convert float infinity to integer

::

  >>> add_integer(float('nan'))
  Traceback (most recent call last):
  ValueError: cannot convert float NaN to integer

::

  >>> add_integer(7, float('nan'))
  Traceback (most recent call last):
  ValueError: cannot convert float NaN to integer

::

  >>> add_integer("try", 59)
  Traceback (most recent call last):
  TypeError: a must be an integer

::

  >>> add_integer(59, "try")
  Traceback (most recent call last):
  TypeError: b must be an integer

::

  >>> add_integer(None)
  Traceback (most recent call last):
  TypeError: a must be an integer

::

  >>> add_integer(3.9, None)
  Traceback (most recent call last):
  TypeError: b must be an integer

::

  >>> add_integer("try", "test")
  Traceback (most recent call last):
  TypeError: a must be an integer
